package karel;

import kareltherobot.*;

public class HurdleJumper extends Robot
{
	public HurdleJumper(int street, int avenue, Direction dir, int beeps)
    {
        super(street, avenue, dir, beeps);
    }
	
	public void turnRight()
	{
		turnLeft();
		turnLeft();
		turnLeft();
	}
	
	// precondition: robot is at the beginning of a hurdle facing East
	// postcondition: robot is at the end of a hurdle facing East
	
	// precondition: robot is at beginning of hurdle, facing north
	// postcondition: robot is at end of hurdle, facing south
	public void jumpHurdle()
	{
		// precondition: robot is on the hurdle, not at the corner yet
		// postcondition robot has found the corner and turns around it
			while (!frontIsClear())
			{
				turnLeft();
				move();
				turnRight();
			}
			move();
			turnRight();
			jumpHurlde();
			turnLeft();
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		World.readWorld("WorldFiles/fig6-22.kwld");
		World.setVisible(true);

    	HurdleJumper Harry = new HurdleJumper(1, 1, East, 0);
    	World.setDelay(10);
    	
    	// precondition: Harry is not at the end of the file and at the beginning of a hurdle on street 1
    	// postcondition: Harry is at the end of the program
		while (!Harry.nextToABeeper())
		{
			while (Harry.frontIsClear())
			{
				Harry.move();
			}
			Harry.jumpHurdle();
		}
		Harry.turnOff();
	}

}
